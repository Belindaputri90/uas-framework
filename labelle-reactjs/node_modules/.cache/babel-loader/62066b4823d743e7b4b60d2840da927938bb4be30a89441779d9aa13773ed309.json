{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tugas Kuliah\\\\Semester 3\\\\uas-framework\\\\labelle-reactjs\\\\src\\\\component\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { Button, Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const history = useNavigate();\n  useEffect(() => {\n    if (sessionStorage.getItem(\"access_token\") !== null) {\n      history('/dashboard');\n    }\n  }, []);\n  const Auth = async e => {\n    e.preventDefault();\n    let result = await fetch(\"http://127.0.0.1:8000/api/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(res => res.json()).then(json => {\n      sessionStorage.setItem(\"access_token\", json.access_token);\n      sessionStorage.setItem(\"data\", json);\n      if (json.message !== 'Unauthorized') {\n        Swal.fire({\n          position: 'top-center',\n          icon: 'success',\n          title: 'Login Success',\n          showConfirmButton: false,\n          timer: 1500\n        });\n        history('/dashboard');\n      } else {\n        Swal.fire({\n          position: 'top-center',\n          icon: 'error',\n          title: 'Login Failed',\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4 shadow-sm p-3 mb-5 bg-white rounded\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: Auth,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicCheckbox\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Check me out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"8jjcFVI3yMdH/n4XJG9PgTMlh+I=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","useNavigate","Swal","Login","email","setEmail","password","setPassword","data","setData","loading","setLoading","error","setError","history","sessionStorage","getItem","Auth","e","preventDefault","result","fetch","method","headers","body","JSON","stringify","then","res","json","setItem","access_token","message","fire","position","icon","title","showConfirmButton","timer","target","value"],"sources":["D:/Tugas Kuliah/Semester 3/uas-framework/labelle-reactjs/src/component/Login.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nexport default function Login() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const history = useNavigate();\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem(\"access_token\") !== null) {\r\n            history('/dashboard')\r\n        }\r\n    }, []);\r\n    const Auth = async (e) => {\r\n        e.preventDefault();\r\n        let result = await fetch(\"http://127.0.0.1:8000/api/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password\r\n            }),\r\n        }).then((res) => res.json())\r\n            .then((json) => {\r\n                sessionStorage.setItem(\"access_token\", json.access_token);\r\n                sessionStorage.setItem(\"data\", json);\r\n                if (json.message !== 'Unauthorized') {\r\n                    Swal.fire({\r\n                        position: 'top-center',\r\n                        icon: 'success',\r\n                        title: 'Login Success',\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                    })\r\n                    history('/dashboard');\r\n                }else{\r\n                    Swal.fire({\r\n                        position: 'top-center',\r\n                        icon: 'error',\r\n                        title: 'Login Failed',\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                    })\r\n                }\r\n            })\r\n    };\r\n    return (\r\n        <div className='container mt-4 shadow-sm p-3 mb-5 bg-white rounded'>\r\n            <Form onSubmit={Auth}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <Form.Text className=\"text-muted\">\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}